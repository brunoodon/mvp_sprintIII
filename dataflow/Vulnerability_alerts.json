{
	"name": "Vulnerability_alerts",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Assets",
						"type": "DatasetReference"
					},
					"name": "Assets"
				},
				{
					"dataset": {
						"referenceName": "KEV",
						"type": "DatasetReference"
					},
					"name": "KEV"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "VulnerabilityAlerts"
				},
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          application as string,",
				"          ip as string,",
				"          hostname as string,",
				"          dep as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Assets",
				"source(output(",
				"          {CVE ID} as string,",
				"          {Vendor Project} as string,",
				"          Product as string,",
				"          {Vulnerability Name} as string,",
				"          {Date Added} as string,",
				"          {Short Description} as string,",
				"          {Required Action} as string,",
				"          {Due Date} as string,",
				"          Notes as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> KEV",
				"Assets, KEV lookup(application == Product,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> VulnerabilityAlerts",
				"VulnerabilityAlerts foldDown(unroll(),",
				"     mapColumn(",
				"          application,",
				"          ip,",
				"          hostname,",
				"          dep,",
				"          {CVE ID},",
				"          {Vendor Project},",
				"          Product,",
				"          {Vulnerability Name},",
				"          {Date Added},",
				"          {Short Description},",
				"          {Required Action},",
				"          {Due Date},",
				"          Notes",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1"
			]
		}
	}
}