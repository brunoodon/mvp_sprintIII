{
	"name": "Vulnerability_alerts",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "assets_df",
						"type": "DatasetReference"
					},
					"name": "Assets"
				},
				{
					"dataset": {
						"referenceName": "kev_df",
						"type": "DatasetReference"
					},
					"name": "KEVCatalog"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VulnAlertsES",
						"type": "DatasetReference"
					},
					"name": "IngestToDW",
					"description": "Ingest all data to Elasticsearch Index"
				}
			],
			"transformations": [
				{
					"name": "SearchVulns"
				},
				{
					"name": "DateFormatTransform"
				}
			],
			"scriptLines": [
				"source(output(",
				"          application as string,",
				"          ip as string,",
				"          hostname as string,",
				"          dep as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Assets",
				"source(output(",
				"          cveID as string,",
				"          vendorProject as string,",
				"          product as string,",
				"          vulnerabilityName as string,",
				"          dateAdded as string,",
				"          shortDescription as string,",
				"          requiredAction as string,",
				"          dueDate as string,",
				"          notes as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> KEVCatalog",
				"Assets, KEVCatalog lookup(application == product,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> SearchVulns",
				"SearchVulns cast(output(",
				"          application as string",
				"     ),",
				"     errors: true) ~> DateFormatTransform",
				"DateFormatTransform sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     insertHttpMethod: 'POST',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     requestFormat: ['type' -> 'json'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> IngestToDW"
			]
		}
	}
}